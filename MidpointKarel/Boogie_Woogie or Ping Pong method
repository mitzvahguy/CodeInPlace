from karel.stanfordkarel import *

"""
File: MidpointKarelBoogieWoogie.py
----------------------
When you finish writing it, MidpointKarel should
leave a beeper on the corner closest to the center of 1st Street
(or either of the two central corners if 1st Street has an even
number of corners).  Karel can put down additional beepers as it
looks for the midpoint, but must pick them up again before it
stops.  The world may be of any size, but you are allowed to
assume that it is at least as tall as it is wide.
"""
def about_face():
    for i in range(2):
        turn_left()

def clean_up():
    while front_is_clear():
        move()
        pick_beeper()
    about_face()
    #if beepers_present():
    #    pick_beeper()
    while no_beepers_present():
        move()
        #   back at midpoint
    while front_is_clear():
        move()
        pick_beeper()
    about_face()
    while no_beepers_present():
        move()
        #   back at midpoint

def boogie_woogie():
    if no_beepers_present():
        put_beeper()
    move()
    #if beepers_present():
    #    clean_up()
    #   Solves a world that is 3 corners wide
    #else:
    while no_beepers_present():
        move()
    about_face()
    move()
    if no_beepers_present():
        put_beeper()
    move()
    if beepers_present():
        about_face()
        move()

def main():
    put_beeper()
    if front_is_clear():
        move()
        if front_is_blocked():
            about_face()
            move()
        else:
            while front_is_clear():
                move()
            put_beeper()
            # the above code solves for a world that is one corner wide and two corners wide
            # else, there is now a beeper in the (1,1) corner and the right-most corner of the
            # first row, column number unknown. Karel is facing east in the right-most corner.
            about_face()
            move()
            # got the system down, now to make it repeat automatically...
            while no_beepers_present():
                boogie_woogie()
            clean_up()


# There is no need to edit code beyond this point

if __name__ == "__main__":
    run_karel_program()
